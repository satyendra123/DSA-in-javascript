//EX-1 write a program to add a number at the end of the array
x=[1,2,3,4,5]
x.push(6)
console.log(x)                o/p - [1,2,3,4,5,6]

//EX-2 write a program to add a number at the first of the array
x=[1,2,3,4,5]
x.unshift(6)
console.log(x)                 o/p- [6,1,2,3,4,5]

//EX-3 write a program to get the last element from the array
x=[1,2,3,4,5]
last=x.pop()
console.log(last)               o/p- [5]
console.log(x)                   o/p- [1,2,3,4]

EX-4 write a program to add a number at the first of the array
x=[1,2,3,4,5]
first = x.shift()
console.log(first)              o/p- [1]
console.log(x)                   o/p- [2,3,4,5]

Ex-5 loop through all the elements in an array
x=["satyendra","Ravi",3,7,"sandhya"]




Ex-6 copy the element of an array to another array
a) using for loop
let x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
let y = [];
for (let i = 0; i < x.length; i++) {
    y[i] = x[i];
}
console.log(y);

b) using for in loop
let x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
let y = [];
for (let index in x) {
    y[index] = x[index];
}
console.log(y);

c) using for of loop
let x = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
let y = [];
let index = 0;
for (let item of x) {
    y[index] = item;
    index++;
}
console.log(y);

d) using forEach loop
let x=[1,2,3,4,5,6,7,8,9,10]
let y=[]
x.forEach((item,index)=>{
    y[index]=item   
})
console.log(y)

e) using map function. map function jo hai wo ek array return karta hai
let x=[1,2,3,4,5,6,7,8,9,10]
let y = x.map((item)=>{
     return item
})
console.log(y)

Ex-6 hum kewal chahte hai ki string jitna bhi hai wo kewal filter out hokar ek new array ban jaye. aur undefined ek datatype hai isliye comparision karte samay hum undefined likhenge quotes ke bina
let x = ["satyendra", "Ravi", 3, 7, "sandhya"];
let y = x.map((item)=>{
    if( typeof(item)==="string"){
        return item
    }
}).filter((item)=> item !== undefined)
console.log(y)                                   
Note- humara jo map function hai wo ek array return karta hai. so isme if lga hai so agar condition match hoga to ye return kar dega aur jiske liye condition match nahi hoga uske liye undefined return karega.
undefined javascript me ek datatype hai. man lo apne ek variable banaya aur us variable me koi bhi value asign nahi kiya hai to hume undefined milega

Ex-7 remove the dublicate element from the array (using single array)- make a unique array
let x = [1, 3, 4, 5, 6, 7, 3];
let n = x.length;

for (let i = 0; i < n; i++) 
{
  for (let j = i + 1; j < n; j++) 
  {
    if (x[i] === x[j]) 
   {
      // Duplicate found, shift elements left
      for (let k = j; k < n - 1; k++) {
        x[k] = x[k + 1];
      }
      n--; // Decrease the size of the array
      j--; // Recheck the current index after shifting
    }
  }
}
// Final array without duplicates
x.length = n;
console.log(x);

Logic- x= [1, 3, 4, 5, 6, 7, 3] so sabse pahle hum first element ka compare krenge baki sabhi element ke sath. so i=0 aur next element j=i+1 se compare hona start hoga. means sabhi element apne aage wale element ke sath compare krege.
so 1 ka compare kiye sabke sath to kisi se match nahi hua aur hum condition me nahi jaa paye uske bad agla element humara 3 hai so 3 copare ho jayega apne last wale element ke sath kyuki waha bhi 3 hai
so j ki jo si value equal hui waha se lekr aage ke sare element n-1 tak ke sare element ko left shift kara denge means k jayega k=j se k<n tak k++ aur left shift kar dega x[k] = x[k + 1]. so humara kaam ho jayega

Ex-7 (ii) store all the dublicate element in the array
let x=[1,3,4,5,4,7,3]
let i=0;
let y=[]
for(i=0;i<x.length;i++)
{
  for(j=i+1;j<x.length;j++)
  {
      if(x[j]== x[i])
      {
         y.push(x[i])
      }
  }
}
console.log(y)

3rd method using include
let x = [1, 3, 4, 5, 6, 7, 3];
let y = [];
for (let i = 0; i < x.length; i++) {
  for (let j = i + 1; j < x.length; j++) { // j starts from i + 1 to avoid duplicate comparisons
    if (x[i] === x[j] && !y.includes(x[i])) { // Check for duplicates and avoid adding repeated values
      y.push(x[i]);
    }
  }
}
console.log(y);


case-2 using javascript using filter method
let x= [1, 3, 4, 5, 6, 7, 3]
let y= x.filter((item,index,x)=>{
            return x.indexOf(item) == index
})
console.log(y)


Q. find the occurance of each element of the array. 
1st method in c
let x = [2, 6, 5, 2, 3, 4, 5, 3];
for(let i=0;i<x.length;i++)
{
    let cnt=1;
    for(let j=i+1;j<x.length;j++)
    {
        if(x[j]==x[i])
        {
            cnt+=1;
        }
    }
    console.log(`Element ${x[i]} comes ${cnt} times`);
}

2nd method- using objects
Note- ise hum objects ka use karke karenge. check krenge if(occurance[i]) means is key ka value hai ya nahi agr hai to +1 kar do nahi to 1 assign kar do occurance me

let x = [2, 6, 5, 2, 3, 4, 5, 3];
let occurance = {};

for (let i of x) {
    if (occurance[i]) {
        occurance[i] += 1;
    } else {
        occurance[i] = 1;
    }
}
console.log(occurance)
o/p- { '2': 2, '3': 2, '4': 1, '5': 2, '6': 1 }

Q. find the max and min value from an array
let x = [2, 6, 5, 2, 3, 4, 5, 3];
const max= x.reduce((acc,cur)=>{
    return acc>cur?acc:cur
})
console.log(max)

const min= x.reduce((acc,cur)=>{
    return acc<cur?acc:cur
})
console.log(min)

Q. find the second largest element from an array
let x = [2, 6, 5, 2, 3, 4, 5, 3];

const max = x.reduce((acc, cur) => (acc > cur ? acc : cur));
console.log("Largest element:", max);

const secondLargest = x.reduce((acc, cur) => {
    if (cur < max && cur > acc) {
        return cur; // Update if cur is smaller than max but larger than current acc
    }
    return acc;
}, -Infinity);

console.log("Second largest element:", secondLargest);

2nd method in c
let x = [2, 6, 5, 2, 3, 4, 5, 3];
let max = x[0];
let second_large = -1

for (let i = 1; i < x.length; i++) {
    if (x[i] > max) 
    {
        second_large = max;
        max = x[i];
    } 
    else if (x[i] > second_large && x[i] !== max) 
    {
        second_large = x[i];
    }
}
console.log("Largest element:", max);
console.log("Second largest element:", second_large);

Q. find the sum of all the elements in an array
let x = [2, 6, 5, 2, 3, 4, 5, 3];
let sum=0
for(i=0;i<x.length;i++)
{
    sum=sum+x[i]
}
console.log(sum)

2nd method using reduce in javascript
let x = [2, 6, 5, 2, 3, 4, 5, 3];
const y= x.reduce((acc,cur)=>{
        return acc+cur
})
console.log(y)


